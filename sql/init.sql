CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	first_name VARCHAR(30)NOT NULL,
	second_name VARCHAR(100)NOT NULL ,
	role VARCHAR(10  )NOT NULL, -- USER, ADMIN, MODERATOR
	password VARCHAR(200)NOT NULL ,
	email VARCHAR(200)  NOT NULL UNIQUE,
	address VARCHAR(200),
	birth_date DATE NOT NULL,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP 
)

CREATE TABLE authors (
	id SERIAL PRIMARY KEY,
	first_name VARCHAR(30)NOT NULL,
	second_name VARCHAR(100)NOT NULL ,
	bio VARCHAR(500),
	birth_date DATE NOT NULL
)

CREATE TABLE books (
	id SERIAL PRIMARY KEY,
	title  VARCHAR(50) NOT NULL ,
	isbn VARCHAR(50) NOT NULL UNIQUE ,
	author_id INTEGER NOT NULL REFERENCES authors(id),
	publisher varchar(50),
	edition INTEGER NOT NULL,
	description VARCHAR(500),
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP 
)


CREATE TABLE book_stocks (
    id SERIAL PRIMARY KEY,
    book_id INTEGER REFERENCES books(id) ON DELETE CASCADE UNIQUE ,
    total_quantity INTEGER NOT NULL DEFAULT 0,
    available_quantity INTEGER NOT NULL DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
)

CREATE TABLE loans (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
    book_id INTEGER REFERENCES books(id) ON DELETE SET NULL,
    started_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    due_at TIMESTAMP WITH TIME ZONE NOT NULL,
    returned_at TIMESTAMP WITH TIME ZONE,
    status VARCHAR(20) NOT NULL DEFAULT 'BORROWED', -- BORROWED, RETURNED, OVERDUE
)

create table categories (
	id SERIAL primary key ,
	title varchar(50)
)

create table book_categories (
	id SERIAL primary key ,
	book_id integer references books(id) ON DELETE CASCADE,
	category_id integer references categories(id) ON DELETE CASCADE
)

CREATE TABLE punishments (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) NOT NULL,
    punisher_id INTEGER REFERENCES users(id) NOT NULL,
    reason TEXT NOT NULL,
    start_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    end_date TIMESTAMP WITH TIME ZONE NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
)